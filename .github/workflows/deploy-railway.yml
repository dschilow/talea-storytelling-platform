name: Build and Deploy Encore App to Railway

on:
  push:
    branches: [ main, implement-mcp-servers ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Build frontend assets
        run: |
          cd frontend
          npm install
          npm run build -- --outDir=../backend/frontend/dist

      - name: Install backend dependencies
        run: |
          rm -rf node_modules
          cd backend
          bun install --no-cache

      - name: Install Encore CLI
        run: |
          curl -L https://encore.dev/install.sh | bash
          echo "$HOME/.encore/bin" >> $GITHUB_PATH

      - name: Use infra.config.railway.json for build
        run: |
          echo "✅ Using backend/infra.config.railway.json (has buckets field and NSQ config)"

      - name: Verify Encore CLI
        run: encore version

      - name: Build Encore Docker image
        env:
          MCP_SERVER_API_KEY: "mcp_sk_build_placeholder"
        run: |
          cd backend
          encore build --config infra.config.railway.json docker myapp --verbose

      - name: Tag Docker image for GitHub Container Registry
        run: |
          # Tag with branch name for feature branches
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          docker tag myapp ghcr.io/${{ github.repository }}:${BRANCH_NAME}
          docker tag myapp ghcr.io/${{ github.repository }}:${{ github.sha }}
          # Only tag as 'latest' if on main branch
          if [ "${{ github.ref_name }}" = "main" ]; then
            docker tag myapp ghcr.io/${{ github.repository }}:latest
          fi

      - name: Push Docker images
        run: |
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          docker push ghcr.io/${{ github.repository }}:${BRANCH_NAME}
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          # Only push 'latest' if on main branch
          if [ "${{ github.ref_name }}" = "main" ]; then
            docker push ghcr.io/${{ github.repository }}:latest
          fi

      - name: Set up Node for Railway trigger
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Trigger Railway deployment (skips if secrets missing)
        continue-on-error: true
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
        run: node scripts/trigger-railway-deploy.mjs

      - name: Deployment Summary
        run: |
          echo "Docker image built and pushed successfully"
          echo "  Image: ghcr.io/${{ github.repository }}:latest"
          echo "  SHA: ghcr.io/${{ github.repository }}:${{ github.sha }}"
          echo ""
          echo "Next steps if auto-redeploy is not configured:"
          echo "  1. Open Railway dashboard"
          echo "  2. Ensure service source is ghcr.io/${{ github.repository }}:latest"
          echo "  3. Verify PORT=8080 and required environment variables"
          echo "  4. Trigger a redeploy manually if needed"
