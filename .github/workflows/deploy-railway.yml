name: Build and Deploy Encore App to Railway

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build frontend assets
        run: |
          cd backend
          bun run build

      - name: Install Encore CLI
        run: |
          curl -L https://encore.dev/install.sh | bash
          echo "$HOME/.encore/bin" >> $GITHUB_PATH

      - name: Create runtime infra config for Encore (secrets only, DB from env)
        env:
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RUNWARE_API_KEY: ${{ secrets.RUNWARE_API_KEY }}
        run: |
          node -e "
          const fs = require('fs');
          const path = 'backend/railway-infra.config.json';

          // API keys from secrets
          const clerkKey = process.env.CLERK_SECRET_KEY || 'sk_test_Lxft4y2rEfoYa8Q7X2GMCRakN4tUXAWHb5NvNPeGeM';
          const openaiKey = process.env.OPENAI_API_KEY || 'placeholder';
          const runwareKey = process.env.RUNWARE_API_KEY || 'vs5giqHV3aiOPvG6x4MiiZSQ7tswlAXt';

          // Read existing config for CORS settings
          let config = {};
          if (fs.existsSync(path + '.backup')) {
            config = JSON.parse(fs.readFileSync(path + '.backup', 'utf8'));
          }

          // Create minimal config with only secrets and CORS
          // Database will be auto-configured from DATABASE_URL env variable
          const minimalConfig = {
            '\$schema': 'https://encore.dev/schemas/infra.schema.json',
            secrets: {
              ClerkSecretKey: clerkKey,
              OpenAIKey: openaiKey,
              RunwareApiKey: runwareKey
            },
            global_cors: config.global_cors || {
              debug: true,
              allow_origins_without_credentials: [
                'http://localhost:5173',
                'http://localhost:5174',
                'https://sunny-optimism-production.up.railway.app',
                'https://talea-storytelling-platform-production.up.railway.app'
              ],
              allow_origins_with_credentials: [
                'http://localhost:5173',
                'http://localhost:5174',
                'https://sunny-optimism-production.up.railway.app',
                'https://talea-storytelling-platform-production.up.railway.app'
              ],
              allow_headers: ['Content-Type', 'Authorization', 'X-Requested-With', 'Accept', 'Origin'],
              expose_headers: ['Content-Type', 'Authorization']
            }
          };

          fs.writeFileSync(path, JSON.stringify(minimalConfig, null, 2));
          console.log('✅ Created minimal railway-infra.config.json');
          console.log('   Secrets configured from GitHub Secrets');
          console.log('   Database will use DATABASE_URL environment variable');
          "


      - name: Verify Encore CLI
        run: encore version

      - name: Build Encore Docker image
        run: |
          cd backend
          encore build --config railway-infra.config.json docker myapp --verbose

      - name: Tag Docker image for GitHub Container Registry
        run: |
          docker tag myapp ghcr.io/${{ github.repository }}:latest
          docker tag myapp ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Push Docker images
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Set up Node for Railway trigger
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Trigger Railway deployment (skips if secrets missing)
        continue-on-error: true
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
          RAILWAY_ENVIRONMENT_ID: ${{ secrets.RAILWAY_ENVIRONMENT_ID }}
          RAILWAY_SERVICE_ID: ${{ secrets.RAILWAY_SERVICE_ID }}
        run: node scripts/trigger-railway-deploy.mjs

      - name: Deployment Summary
        run: |
          echo "Docker image built and pushed successfully"
          echo "  Image: ghcr.io/${{ github.repository }}:latest"
          echo "  SHA: ghcr.io/${{ github.repository }}:${{ github.sha }}"
          echo ""
          echo "Next steps if auto-redeploy is not configured:"
          echo "  1. Open Railway dashboard"
          echo "  2. Ensure service source is ghcr.io/${{ github.repository }}:latest"
          echo "  3. Verify PORT=8080 and required environment variables"
          echo "  4. Trigger a redeploy manually if needed"
